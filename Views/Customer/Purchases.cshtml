@model CustomerOrdersAndOrderDetails
<h2 class="mt-3"><i class="fa fa-clock-rotate-left"></i> Your Purchases</h2>

@* DEBUGGING *@
@* <h3>DEBUGGING</h3>
<table>
    <tr>
        <th>Var</th>
        <th>Val</th>
    </tr>
    <tr>
        <td>CustomerId</td>
        <td>@Model.Customer.CustomerId</td>
    </tr>
    <tr>
        <td></td>
        <td></td>
    </tr>
</table> *@

@* <style>
    table * {
        border: black 2px solid;
        padding: 4px;
    }
</style> *@

<div id="allOrders">
@if (Model.Orders.Count() == 0 )
{
    <h3>It looks like you haven't made any purchases. After making a purchase, you can view your items here, and after recieving your items, also leave reviews.</h3>
}
@foreach (Order o in Model.Orders)
{
    @* Order Variables *@
    decimal orderTotal = 0m;


    <div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-3">
                <span>Ordered on @o.OrderDate</span>
            </div>
            <div class="col-3">
                @if (@o.ShippedDate.HasValue)
                {
                    <span>Shipped on @o.ShippedDate</span>
                }else{
                    <span>Not yet shipped</span>
                }
            </div>
        </div>
    </div>

    @* <div class="card-body">
    </div> *@
    <ul class="list-group list-group-flush">
        <table class="table bg-secondary">
            <thead>
                <tr>
                    <th scope="col"><!--Product--></th>
                    <th scope="col">Quantity</th>
                    <th scope="col">Total</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>

                @foreach (OrderDetails od in o.OrderDetails)
                {
                    @* Row Variables *@

                    var productSubtotal = (od.Quantity * od.Product.UnitPrice);
                    orderTotal += productSubtotal;

                    <tr>
                        <th scope="row">
                            <a target="_blank" class="nav-link d-flex" asp-controller="Product" asp-action="Index" asp-route-id="@od.Product.CategoryId" class="list-group-item list-group-item-action">@od.Product.ProductName</a>
                        </th>
                        <td>x @od.Quantity</td>
                        @* <td>$ @((od.Quantity * od.Product.UnitPrice))</td> *@
                        <td>$
                            @productSubtotal.ToString("0.00") @* https://learn.microsoft.com/en-us/dotnet/standard/base-types/custom-numeric-format-strings *@
                        </td>
                        <td>
                            @if (@o.ShippedDate.HasValue)
                            {
                                @* Check for customer id is redundent :) Any(r => r.CustomerId == @Model.Customer.CustomerId) *@
                                @if (@Model.LeftReviews.Any(r => r.ProductId == od.ProductId))
                                {
                                    <a target="_blank" class="nav-link d-flex" asp-controller="Product" asp-action="Index" asp-route-id="@od.Product.CategoryId" class="list-group-item list-group-item-action">Already Left Review</a>

                                }else{
                                    <a class="nav-link d-flex" asp-controller="Product" asp-action="Review" asp-route-id="@od.Product.ProductId" target="_blank">Leave Review<i class="bi bi-pen"></i></a>
                                }
                            }else{
                                <span></span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <th scope="col" class="col-5"></th>
                    <th scope="col">Total</th>
                    <th scope="col">$ @orderTotal.ToString("#,0.00")</th>
                    <th scope="col"></th>
                </tr>
            </tfoot>
        </table>
    </ul>
    <div class="card-footer">
    </div>
</div>
}
</div>
        @* <h4>@o.OrderDate</h4> *@


@* @foreach (OrderDetail od in o.OrderDetail)
{
    <p>@od.ProductId</p>
} *@

<div id="collatedProductsDisplay">
@* @foreach (Order o in Model.)
{
    <div class="">
        <h4>@o.OrderDate</h4>
    </div>
} *@

@*
/*OrderDetails.Where(od => od.Order.CustomerID == 5).GroupBy(od => od.Product.ProductName).Select(grp => new {
product = grp.Key,
qty = grp.Sum(q => q.Quantity)
}).OrderByDescending(p => p.qty).Take(5)*/ *@
